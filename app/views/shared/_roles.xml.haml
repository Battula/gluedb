%n1:hbx_roles
  - if person.authority_member_id.present?
    %n1:authority_qhp_role_id= person.authority_member_id
  %n1:qhp_roles
    - person.members.each do |member|
      %n1:qhp_role
        %n1:id= member.hbx_member_id
        %n1:gender= "urn:dc0:terms:gender##{member.gender}"
        %n1:dob= member.dob.try(:strftime,"%Y%m%d")
        - if member.ssn.present?
          %n1:ssn= member.ssn
        %n1:tobacco_user= member.hlh.downcase
        - if member.lui.present?
          %n1:language= member.lui
        - policies = member.policies
        - if policies.present?
          %n1:policies
            - policies.each do |policy|
              %n1:policy= render 'shared/policy_link_type', policy: policy
  - if person.responsible_parties.present?
    %n1:responsible_party_roles
      - person.responsible_parties.each do |party|
        %n1:responsible_party_role
          %n1:entity_identifier= party.entity_identifier
          %n1:organization_id= party.organization_name
  - if false #TODO
    %n1:medicaid_roles
      %n1:medicaid_role
        %n1:id
  - employee_roles = person.employee_roles

  - if employee_roles.present?
    %n1:employee_roles
      - employee_roles.each do |role|
        %n1:employee_role
          %n1:employer= render 'shared/employer_link_type', employer: role.policy.employer
          %n1:employment_status= "urn:openhbx:terms:v1:employment_status##{role.employment_status_code}" 
          - if role.coverage_start.present?
            %n1:eligibility_start_date= role.coverage_start.try(:strftime,"%Y%m%d")
          - if role.coverage_end.present?
            %n1:eligibility_end_date= role.coverage_end.try(:strftime,"%Y%m%d")